# Import necessary libraries
import network
import socket
from machine import UART
import machine
import esp
import gc
import time
import os

# Perform initial setup
gc.collect()
esp.osdebug(None)

# Set up Wi-Fi connection
wlan = network.WLAN(network.STA_IF)
wlan.active(True)
w = "Galaxy A73 5G 5354"  # WiFi name
p = "oqry3557"             # WiFi password

# Create a socket for communication
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Try to connect to the WiFi network
try:
    if wlan.isconnected() == False:
        wlan.connect(w, p)
except:
    print('Not connected, please check if the WiFi network is active')

# Wait until the device is connected to the WiFi network
while wlan.isconnected() == False:
    pass

# Print a message indicating successful connection
print(f'Connected successfully to {w}')

# Set up host and port for socket communication
HOST = wlan.ifconfig()[0]
PORT = 9999

# Bind the socket to the host and port
s.bind((HOST, PORT))
s.listen(5)

# Set up UART communication
uart = UART(1, baudrate=9600, tx=17, rx=16)

# Set public key values for RSA encryption
n = 6910782171213996658397253121710630123795235324197483219005527369298065059694620267925472189305202037262152652525687783466320955431741311010423968405213211
e = 65537

# Main loop
while True:
    # Check if there is data available on UART
    if uart.any():
        # Read 8 bytes of data from UART
        data = uart.read(8)
        if data:
            pass
        else:
            # If no data, set default value
            data = b'Voltage : 0'
    else:
        # If no data, set default value
        data = b'Voltage : 0'

    # Convert bytes to integer
    num = int.from_bytes(data, "big")

    # Perform RSA encryption
    x = pow(num, e, n)

    # Accept incoming socket connection
    conn, addr = s.accept()
    
    # Print information about the connection
    print('Got a connection from %s' % str(addr))

    # Convert the result to a string and send it through the socket
    html = str(x)
    html = html.replace('\r\n', '\n')
    conn.sendall(html)

    # Wait for a short duration
    time.sleep(0.1)

    # Close the socket connection
    conn.close()
